"""
Bot logging system
"""
import discord
from discord.ext import commands
from datetime import datetime, timezone
import traceback


class BotLogger:
    """Handles bot logging to Discord channels and console"""
    
    def __init__(self, bot):
        self.bot = bot
        self.log_channel_id = bot.config.log_channel_id
    
    async def log(self, message: str):
        """Log message to Discord channel and console"""
        # Console log
        print(f"[LOG] {message}")
        
        # Discord channel log
        if self.log_channel_id is None:
            return
            
        try:
            channel = self.bot.get_channel(self.log_channel_id)
            if channel is None:
                channel = await self.bot.fetch_channel(self.log_channel_id)
            
            await channel.send(message)
        except Exception as e:
            print(f"[LOG ERROR] Kh√¥ng th·ªÉ g·ª≠i log ƒë·∫øn Discord: {e}")
    
    async def log_member_join(self, member: discord.Member):
        """Log when a member joins"""
        log_msg = (
            f"üëã **Th√†nh vi√™n m·ªõi:** {member.mention} (`{member.id}`)\n"
            f"**T√†i kho·∫£n t·∫°o:** {member.created_at.strftime('%d/%m/%Y %H:%M:%S')}\n"
            f"**Tham gia l√∫c:** {member.joined_at.strftime('%d/%m/%Y %H:%M:%S') if member.joined_at else 'Kh√¥ng x√°c ƒë·ªãnh'}"
        )
        await self.log(log_msg)
    
    async def log_member_leave(self, member: discord.Member):
        """Log when a member leaves"""
        log_msg = (
            f"üëã **Th√†nh vi√™n r·ªùi:** {member.mention} (`{member.id}`)\n"
            f"**Tham gia l√∫c:** {member.joined_at.strftime('%d/%m/%Y %H:%M:%S') if member.joined_at else 'Kh√¥ng x√°c ƒë·ªãnh'}\n"
            f"**R·ªùi l√∫c:** {datetime.now(timezone.utc).strftime('%d/%m/%Y %H:%M:%S')}"
        )
        await self.log(log_msg)
    
    async def log_message_edit(self, before: discord.Message, after: discord.Message):
        """Log when a message is edited"""
        log_msg = (
            f"‚úèÔ∏è **Tin nh·∫Øn ƒë∆∞·ª£c ch·ªânh s·ª≠a**\n"
            f"**Ng∆∞·ªùi g·ª≠i:** {after.author.mention} (`{after.author.id}`)\n"
            f"**K√™nh:** {after.channel.mention}\n"
            f"**[Nh·∫£y t·ªõi tin nh·∫Øn]({after.jump_url})**\n\n"
            f"**Tr∆∞·ªõc:**\n```\n{before.content}\n```\n"
            f"**Sau:**\n```\n{after.content}\n```"
        )
        await self.log(log_msg)
    
    async def log_message_delete(self, message: discord.Message):
        """Log when a message is deleted"""
        log_msg = (
            f"üóëÔ∏è **Tin nh·∫Øn b·ªã x√≥a**\n"
            f"**Ng∆∞·ªùi g·ª≠i:** {message.author.mention} (`{message.author.id}`)\n"
            f"**K√™nh:** {message.channel.mention}\n"
            f"**N·ªôi dung:**\n```\n{message.content}\n```"
        )
        await self.log(log_msg)




