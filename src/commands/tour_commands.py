"""
Tour management commands
"""
import discord
from discord.ext import commands
from datetime import datetime, timedelta


# Mock database for tour stations (replace with real database later)
tour_stations = {
    1: {"name": "Tr·∫°m 1 - UIT - Tr∆∞·ªùng ƒê·∫°i h·ªçc C√¥ng ngh·ªá Th√¥ng tin", "status": "available", "current_team": None, "checkin_time": None},
    2: {"name": "Tr·∫°m 2 - Th∆∞ vi·ªán trung t√¢m", "status": "available", "current_team": None, "checkin_time": None},
    3: {"name": "Tr·∫°m 3 - Trung t√¢m Gi√°o d·ª•c qu·ªëc ph√≤ng v√† an ninh", "status": "available", "current_team": None, "checkin_time": None},
    4: {"name": "Tr·∫°m 4 - HCMUT - Tr∆∞·ªùng ƒë·∫°i h·ªçc B√°ch Khoa Th√†nh ph·ªë H·ªì Ch√≠ Minh", "status": "available", "current_team": None, "checkin_time": None},
    5: {"name": "Tr·∫°m 5 - HCMUS - Tr∆∞·ªùng ƒë·∫°i h·ªçc Khoa h·ªçc T·ª± nhi√™n", "status": "available", "current_team": None, "checkin_time": None},
    6: {"name": "Tr·∫°m 6 - USSH - Tr∆∞·ªùng ƒë·∫°i h·ªçc Khoa h·ªçc X√£ h·ªôi v√† Nh√¢n vƒÉn", "status": "available", "current_team": None, "checkin_time": None},
    7: {"name": "Tr·∫°m 7 - IU - Tr∆∞·ªùng ƒê·∫°i h·ªçc Qu·ªëc t·∫ø", "status": "available", "current_team": None, "checkin_time": None},
    8: {"name": "Tr·∫°m 8 - KTXA - K√Ω t√∫c x√° khu A", "status": "available", "current_team": None, "checkin_time": None},
    9: {"name": "Tr·∫°m 9 - KTXB - K√Ω t√∫c x√° khu B", "status": "available", "current_team": None, "checkin_time": None},
    10: {"name": "Tr·∫°m 10 - NVHSV - Nh√† vƒÉn h√≥a sinh vi√™n", "status": "available", "current_team": None, "checkin_time": None}
}

# Mock team database
teams = {}


def setup_tour_commands(bot):
    """Setup tour management commands"""
    
    @bot.command(name="stations")
    async def stations(ctx):
        """Hi·ªÉn th·ªã danh s√°ch t·∫•t c·∫£ tr·∫°m"""
        embed = discord.Embed(
            title="üèÅ **Danh s√°ch tr·∫°m tour VNU**",
            description="Tr·∫°ng th√°i hi·ªán t·∫°i c·ªßa c√°c tr·∫°m",
            color=0x00ff00
        )
        
        for station_id, station in tour_stations.items():
            status_emoji = "üü¢" if station["status"] == "available" else "üî¥"
            team_info = f"ƒê·ªôi: {station['current_team']}" if station["current_team"] else "Tr·ªëng"
            
            embed.add_field(
                name=f"{status_emoji} {station['name']}",
                value=f"**Tr·∫°ng th√°i:** {station['status']}\n**{team_info}**",
                inline=True
            )
        
        embed.set_footer(text="S·ª≠ d·ª•ng !checkin <tr·∫°m_id> ƒë·ªÉ check-in")
        await ctx.send(embed=embed)
    
    @bot.command(name="checkin")
    async def checkin(ctx, station_id: int, *, team_name: str):
        """Check-in v√†o tr·∫°m"""
        try:
            if station_id not in tour_stations:
                await ctx.send(f"‚ùå **L·ªói:** Tr·∫°m {station_id} kh√¥ng t·ªìn t·∫°i!")
                return
            
            station = tour_stations[station_id]
            
            if station["status"] != "available":
                await ctx.send(f"‚ùå **L·ªói:** Tr·∫°m {station_id} ƒë√£ c√≥ ƒë·ªôi kh√°c!")
                return
            
            # Check-in
            station["status"] = "occupied"
            station["current_team"] = team_name
            station["checkin_time"] = datetime.now()
            
            # Log team info
            teams[team_name] = {
                "current_station": station_id,
                "checkin_time": station["checkin_time"],
                "member": ctx.author.id
            }
            
            embed = discord.Embed(
                title="‚úÖ **Check-in th√†nh c√¥ng!**",
                description=f"ƒê·ªôi **{team_name}** ƒë√£ check-in v√†o {station['name']}",
                color=0x00ff00
            )
            
            embed.add_field(
                name="üìç **Tr·∫°m**",
                value=f"{station['name']} (ID: {station_id})",
                inline=True
            )
            
            embed.add_field(
                name="‚è∞ **Th·ªùi gian**",
                value=station["checkin_time"].strftime("%H:%M:%S"),
                inline=True
            )
            
            embed.add_field(
                name="üë• **Th√†nh vi√™n**",
                value=ctx.author.mention,
                inline=True
            )
            
            await ctx.send(embed=embed)
            
        except ValueError:
            await ctx.send("‚ùå **L·ªói:** ID tr·∫°m ph·∫£i l√† s·ªë!")
        except Exception as e:
            await ctx.send(f"‚ùå **L·ªói:** {str(e)}")
    
    @bot.command(name="checkout")
    async def checkout(ctx, *, team_name: str):
        """Check-out kh·ªèi tr·∫°m hi·ªán t·∫°i"""
        try:
            if team_name not in teams:
                await ctx.send(f"‚ùå **L·ªói:** ƒê·ªôi {team_name} ch∆∞a check-in tr·∫°m n√†o!")
                return
            
            team = teams[team_name]
            station_id = team["current_station"]
            station = tour_stations[station_id]
            
            # Calculate time spent
            checkin_time = team["checkin_time"]
            checkout_time = datetime.now()
            time_spent = checkout_time - checkin_time
            
            # Check-out
            station["status"] = "available"
            station["current_team"] = None
            station["checkin_time"] = None
            
            # Remove team from database
            del teams[team_name]
            
            embed = discord.Embed(
                title="üèÅ **Check-out th√†nh c√¥ng!**",
                description=f"ƒê·ªôi **{team_name}** ƒë√£ ho√†n th√†nh tr·∫°m {station['name']}",
                color=0xff8800
            )
            
            embed.add_field(
                name="‚è±Ô∏è **Th·ªùi gian ho√†n th√†nh**",
                value=f"{time_spent.seconds // 60} ph√∫t {time_spent.seconds % 60} gi√¢y",
                inline=True
            )
            
            embed.add_field(
                name="üë• **Th√†nh vi√™n**",
                value=ctx.author.mention,
                inline=True
            )
            
            await ctx.send(embed=embed)
            
        except Exception as e:
            await ctx.send(f"‚ùå **L·ªói:** {str(e)}")
    
    @bot.command(name="mystation")
    async def mystation(ctx):
        """Hi·ªÉn th·ªã tr·∫°m hi·ªán t·∫°i c·ªßa ng∆∞·ªùi d√πng"""
        try:
            user_id = ctx.author.id
            user_team = None
            
            # Find team by member
            for team_name, team_info in teams.items():
                if team_info["member"] == user_id:
                    user_team = team_name
                    break
            
            if not user_team:
                await ctx.send("‚ùå B·∫°n ch∆∞a check-in tr·∫°m n√†o!")
                return
            
            team = teams[user_team]
            station_id = team["current_station"]
            station = tour_stations[station_id]
            
            embed = discord.Embed(
                title="üìç **Tr·∫°m hi·ªán t·∫°i c·ªßa b·∫°n**",
                description=f"ƒê·ªôi **{user_team}**",
                color=0x0099ff
            )
            
            embed.add_field(
                name="üèÅ **Tr·∫°m**",
                value=f"{station['name']} (ID: {station_id})",
                inline=True
            )
            
            embed.add_field(
                name="‚è∞ **Check-in l√∫c**",
                value=team["checkin_time"].strftime("%H:%M:%S"),
                inline=True
            )
            
            embed.add_field(
                name="‚è±Ô∏è **ƒê√£ ·ªü tr·∫°m**",
                value=f"{(datetime.now() - team['checkin_time']).seconds // 60} ph√∫t",
                inline=True
            )
            
            await ctx.send(embed=embed)
            
        except Exception as e:
            await ctx.send(f"‚ùå **L·ªói:** {str(e)}")
    
    @bot.command(name="leaderboard")
    async def leaderboard(ctx):
        """Hi·ªÉn th·ªã b·∫£ng x·∫øp h·∫°ng c√°c ƒë·ªôi"""
        if not teams:
            await ctx.send("üìä Ch∆∞a c√≥ ƒë·ªôi n√†o check-in!")
            return
        
        # Sort teams by time spent
        sorted_teams = sorted(
            teams.items(),
            key=lambda x: datetime.now() - x[1]["checkin_time"],
            reverse=True
        )
        
        embed = discord.Embed(
            title="üèÜ **B·∫£ng x·∫øp h·∫°ng c√°c ƒë·ªôi**",
            description="S·∫Øp x·∫øp theo th·ªùi gian ·ªü tr·∫°m",
            color=0xffd700
        )
        
        for i, (team_name, team_info) in enumerate(sorted_teams[:10], 1):  # Top 10
            station_id = team_info["current_station"]
            station = tour_stations[station_id]
            time_spent = datetime.now() - team_info["checkin_time"]
            
            embed.add_field(
                name=f"#{i} ü•á {team_name}",
                value=f"**Tr·∫°m:** {station['name']}\n**Th·ªùi gian:** {time_spent.seconds // 60} ph√∫t",
                inline=False
            )
        
        embed.set_footer(text="C·∫≠p nh·∫≠t theo th·ªùi gian th·ª±c")
        await ctx.send(embed=embed)
